# Nginx configuration for Mistral Jump iframe integration
# Place this in your nginx sites-available directory and create a symlink to sites-enabled

server {
    listen 80;
    server_name 52.58.159.118 localhost;  # Replace with your actual domain/IP
    
    # Root directory where your built dist files are located
    root /path/to/your/mistral-jump/dist;  # Update this path
    index index.html;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Main location block for serving the app
    location / {
        try_files $uri $uri/ /index.html;
        
        # CORS headers for cross-origin requests
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Iframe embedding headers - CRITICAL for iframe functionality
        add_header 'X-Frame-Options' 'SAMEORIGIN' always;
        add_header 'Content-Security-Policy' 'frame-ancestors *' always;
        
        # Cache control for static assets
        add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
        add_header 'Pragma' 'no-cache' always;
        add_header 'Expires' '0' always;
    }
    
    # Static assets with longer cache times
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header 'Cache-Control' 'public, immutable';
        
        # CORS headers for assets
        add_header 'Access-Control-Allow-Origin' '*' always;
        
        # Iframe embedding headers for assets too
        add_header 'X-Frame-Options' 'SAMEORIGIN' always;
        add_header 'Content-Security-Policy' 'frame-ancestors *' always;
    }
    
    # Handle preflight OPTIONS requests
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|html)$ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Security headers (but allow iframe embedding)
    add_header 'X-Content-Type-Options' 'nosniff' always;
    add_header 'X-XSS-Protection' '1; mode=block' always;
    add_header 'Referrer-Policy' 'strict-origin-when-cross-origin' always;
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}

# HTTPS configuration (recommended for production)
server {
    listen 443 ssl http2;
    server_name 52.58.159.118 your-domain.com;  # Replace with your actual domain
    
    # SSL certificate paths (update these)
    # ssl_certificate /path/to/your/cert.pem;
    # ssl_certificate_key /path/to/your/private.key;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Same configuration as HTTP but for HTTPS
    root /path/to/your/mistral-jump/dist;  # Update this path
    index index.html;
    
    location / {
        try_files $uri $uri/ /index.html;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # Iframe embedding headers
        add_header 'X-Frame-Options' 'SAMEORIGIN' always;
        add_header 'Content-Security-Policy' 'frame-ancestors *' always;
        
        # No cache for main HTML
        add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
    }
    
    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header 'Cache-Control' 'public, immutable';
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'X-Frame-Options' 'SAMEORIGIN' always;
        add_header 'Content-Security-Policy' 'frame-ancestors *' always;
    }
    
    # Security headers
    add_header 'X-Content-Type-Options' 'nosniff' always;
    add_header 'X-XSS-Protection' '1; mode=block' always;
    add_header 'Referrer-Policy' 'strict-origin-when-cross-origin' always;
    add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubDomains' always;
}

# Redirect HTTP to HTTPS (uncomment for production)
# server {
#     listen 80;
#     server_name 52.58.159.118 your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
